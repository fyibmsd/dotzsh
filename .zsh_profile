# zsh plugins
source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh

plugins=(zsh-autosuggestions)

# config {

prompt_context () {
    prompt_segment black default $HOST
}

# }

# alias {
alias ll='ls -lah'
alias vi=vim

alias mail='/bin/cat /dev/null > /var/mail/fyibmsd'

alias ag='ag --color-match=36'
alias pack="mvn clean package -DskipTests=true -Dmaven.test.skip=true"

alias -s gz='tar -xzvf'
alias -s tgz='tar -xzvf'
alias -s zip='unzip'
alias -s bz2='tar -xjvf'

alias nt="sudo nginx -t"
alias nsr="sudo nginx -s reload"

alias clone='git clone --depth=1'

alias proxy='export ALL_PROXY=socks5://127.0.0.1:1080'

alias rmpyc='find . -name "*.pyc" | xargs rm'

# }

# Software {
alias subl="/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl"
alias mweb="/Applications/MWeb.app/Contents/MacOS/MWeb"

code () {  
    if [[ $# = 0 ]]  
    then  
        open -a "Visual Studio Code" 
    else 
        [[ $1 = /* ]] && F="$1" || F="$PWD/${1#./}" 
        open -a "Visual Studio Code" --args "$F" 
    fi  
}  

function cdf() {
    target=`osascript -e 'tell application "Finder" to if (count of Finder windows) > 0 then get POSIX path of (target of front Finder window as text)'`
    if [ "$target" != "" ]; then
        cd "$target"; pwd
    else
        echo 'No Finder window found' >&2
    fi
}

function destroy() {
   current=`pwd`
   echo "delete $current..."
   cd ..
   /bin/rm -rf $current
}

# git update
function update() {
	lorem="$(curl -sL https://lorem.nimrc.com/)"
	comment=${1-$lorem}
	git add . && git commit -m $comment && git push origin $(git_current_branch)
}

# }

# functions
#
# change php version
function chp () {
    echo $1 > ~/.php_version
}

function run () {
	gcc $1 -o /tmp/$1
	/tmp/$1
	rm /tmp/$1
}

function github() {
	n=$(echo $1 | awk -F ':' '{print $2}')
	d=~/code/org/github/$n[0,-5]
	/bin/mkdir -p $d
	/usr/local/bin/git clone --depth=1 $1 $d
	cd $d
}

function org() {
	n=$(echo $1 | awk -F ':' '{print $2}')
	d=~/code/org/$n[0,-5]
	/bin/mkdir -p $d
	/usr/local/bin/git clone --depth=1 $1 $d
	cd $d
}

#
function homestead() {
    ( cd ~/.homestead && vagrant $* )
}

function centos() {
    ( cd ~/code/scripts/vagrant/centos && vagrant $* )
}

function transfer() {
    # write to output to tmpfile because of progress bar
    tmpfile=$( mktemp -t transferXXX )
    curl --progress-bar --upload-file $1 https://transfer.sh/$(basename $1) >> $tmpfile;
    cat $tmpfile;
    rm -f $tmpfile;
}

alias clone='git clone --depth=1'

# config files
alias hosts="sudo vim /etc/hosts"
alias phpini="subl /usr/local/etc/php/5.6/php.ini"
alias pac="subl ~/code/php/www/vps.pac"

# extra
alias server="php -S 0.0.0.0:8000 -t ."

# brew services
alias bst="brew services start"
alias bsp="brew services stop"
alias bsr="brew services restart"
alias bsls="brew services list"

# alias composer="php -c /usr/local/etc/php/5.6/composer.ini /usr/local/bin/composer $*"
alias ip="ifconfig | grep 'inet ' | uniq"

# docker
function drm() {
    docker ps -a | grep 'Exited' | awk '{print $1}' | xargs docker rm
}
function drmi() {
    docker images -a | grep '<none>' | awk '{print $3}' | xargs docker rmi
}

export LC_CTYPE="zh_CN.UTF-8"

# PHP
export PHP_HOME="/usr/local/opt/php@`cat ~/.php_version`"

# Java
export JAVA_HOME=`/usr/libexec/java_home -v 1.8`
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar

# Golang
export GOROOT=/usr/local/opt/go/libexec
export GOPATH=/Users/fyibmsd/code/go
export PHP=$HOME/code/php
export PTOOLSPATH=$HOME/code/php/library/vendor/phalcon/devtools

# NodeJS
export NODE_PATH="/usr/local/lib/node_modules"
export NODE_HOME="/usr/local/opt/node@10"
export EDITOR="/usr/local/bin/vim"

# Pyenv
# export PYENV_ROOT=$HOME/.pyenv

# Rust
export RUST_HOME=/usr/local/opt/rust

export PATH=$NODE_HOME/bin:/usr/local/opt/qt/bin:/usr/local/opt/bison/bin:/usr/local/sbin:$PHP_HOME/bin:$PHP_HOME/sbin:$JAVA_HOME/bin:$GOPATH/bin:$GOROOT/bin:~/.composer/vendor/bin:~/.cargo/bin:$PATH

# include libs
export PHP_ZLIB_DIR="/usr/local/opt/zlib"

# homebrew http://ban.ninja/ @dep
export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles


# Highlight linux man page
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'
source ~/.zsh/.zsh_local

serve () {
	if [[ -n "$1" && -n "$2" ]]
	then
		sudo bash ~/code/scripts/server-scripts/serve-laravel.sh "$1" "$2" 80
	else
		echo "Error: missing required parameters."
		echo "Usage: "
		echo "  serve domain path"
	fi
}
